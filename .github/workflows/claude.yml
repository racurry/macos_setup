name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # This is an optional setting that allows Claude to read CI results on PRs
          additional_permissions: |
            actions: read

          # Custom prompt to ensure Claude follows standards and runs tests
          prompt: |
            REPO: ${{ github.repository }}
            ISSUE/PR: ${{ github.event.issue.number || github.event.pull_request.number }}

            Context:
            ${{ github.event.issue.title && format('Issue Title: {0}', github.event.issue.title) || '' }}
            ${{ github.event.issue.body && format('Issue Description: {0}', github.event.issue.body) || '' }}
            ${{ github.event.comment.body && format('Comment: {0}', github.event.comment.body) || '' }}

            Before starting any task:
            1. ALWAYS read and follow the guidance in CLAUDE.md
            2. Read @AGENTS.md for any additional context and instructions
            3. Follow all coding standards and conventions found in the repository

            For any code changes:
            1. Run appropriate tests after making changes
            2. Ensure all tests pass before completing the task
            3. Check for and fix any type errors or compilation issues

            When working on issues (creating new code/fixes):
            1. Create a new branch for your changes
            2. Make the necessary code changes
            3. Commit your changes with a descriptive commit message
            4. Create a pull request with:
               - A clear title summarizing the changes
               - A description explaining what was done and why
               - Reference to the issue being fixed (e.g., "Fixes #4")
            5. DO NOT merge the PR - leave it open for review

            When working on PRs (reviewing existing changes):
            1. Review the changes thoroughly
            2. Suggest improvements following repository standards
            3. Ensure test coverage for new functionality

            Always be thorough and follow best practices.

            Please work on the issue/task described above.

          # Configure tools Claude can use
          claude_args: '--allowed-tools "Bash(git *),Bash(gh *),Bash(./tests/*),Bash(command -v *),Read(**),Edit(**),Glob(**),Grep(**),Write(**),MultiEdit(**),TodoWrite,Task,WebFetch,WebSearch" --model sonnet'
