#!/bin/bash

# Set up all of the preferences

indent() {
  printf "    "
}

print_starting() {
  indent
  printf "\e[1m"
  printf '%s ' "$@"
  printf "\e[0m"
}

print_finished() {
  CHAR_LENGTH=$1
  declare -i REMAINING_CHARS
  REMAINING_CHARS=74-$CHAR_LENGTH
  for ((n=0;n<$REMAINING_CHARS;n++))
  do
    printf "."
  done
  printf "âœ…\n"
}

do_keep_sudo_alive() {
  ITEM="We need sudo all the time"
  print_starting $ITEM
  sudo -v
  printf "\n"
  # Keep-alive: update existing `sudo` time stamp until `.macos` has finished
  while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &
}

do_global_settings() {
  ITEM="Setting up some global preferences"
  print_starting $ITEM

  # Always show scrollbars
  defaults write NSGlobalDomain AppleShowScrollBars -string "Always"

  # Expand save panel by default
  defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true

  # Expand print panel by default
  defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true

  # Automatically quit printer app once the print jobs complete
  defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true

  # Disable the "Are you sure you want to open this application?" dialog
  defaults write com.apple.LaunchServices LSQuarantine -bool false

  # Prevent Music app from auto-launching when media keys are pressed
  defaults write com.apple.Music AutoLaunch -bool false

  # Don't automatically adjust the brightness of the screen
  sudo defaults write /Library/Preferences/com.apple.iokit.AmbientLightSensor "Automatic Display Enabled" -bool false

  # Disable "close windows when quitting an app"
  defaults write NSGlobalDomain NSQuitAlwaysKeepsWindows -bool true

  # Enable dark mode
  defaults write NSGlobalDomain AppleInterfaceStyle -string "Dark"

  print_finished ${#ITEM}
}

do_keyboard_setup() {
  ITEM="Setting up keyboard preferences"
  print_starting $ITEM

  # Fast key repeats
  defaults write -g InitialKeyRepeat -int 15
  defaults write -g KeyRepeat -int 2
  defaults write NSGlobalDomain AppleKeyboardUIMode -int 3

  # Disable automatic keyboard brightness
  defaults write com.apple.BezelServices kDim -bool false

  # Disable autocorrect
  defaults write -g NSAutomaticSpellingCorrectionEnabled -bool false

  # Disable auto-capitalize
  defaults write NSGlobalDomain NSAutomaticCapitalizationEnabled -bool false

  # Disable auto period insert
  defaults write NSGlobalDomain NSAutomaticPeriodSubstitutionEnabled -bool false

  # Enable text replacement everywhere
  defaults write -g WebAutomaticTextReplacementEnabled -bool true

  print_finished ${#ITEM}
}

do_dock_setup() {
  ITEM="Setting up the dock"
  print_starting $ITEM

  # Remove all default apps from the dock
  defaults write com.apple.dock persistent-apps -array

  # Only show active things in the dock
  defaults write com.apple.dock static-only -bool true
  # Autohide the dock
  defaults write com.apple.dock autohide -bool true
  # Put it on the left
  defaults write com.apple.Dock orientation -string "left"

  # Hot corners
  # Possible values:
  #  0: no-op
  #  2: Mission Control
  #  3: Show application windows
  #  4: Desktop
  #  5: Start screen saver
  #  6: Disable screen saver
  # 10: Put display to sleep
  # 11: Launchpad
  # 12: Notification Center
  defaults write com.apple.dock wvous-bl-corner -int 5
  defaults write com.apple.dock wvous-bl-modifier -int 0

  # No dock bouncing, ever
  defaults write com.apple.dock no-bouncing -bool TRUE

  # Set icon size
  defaults write com.apple.dock tilesize -int 36

  print_finished ${#ITEM}
}

do_trackpad_setup() {
  ITEM="Setting up the trackpad"
  print_starting $ITEM

  # Enable one-click taps
  defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
  defaults write com.apple.AppleMultitouchTrackpad Clicking -bool true
  defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
  defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1

  # Trackpad: enable right click with two fingers
  defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadRightClick -bool true
  defaults write com.apple.AppleMultitouchTrackpad TrackpadRightClick -bool true
  defaults -currentHost write NSGlobalDomain com.apple.trackpad.enableSecondaryClick -bool true
  defaults write com.apple.AppleMultitouchTrackpad TrackpadRightClick -bool true

  # Enable Force Click and haptic feedback
  defaults write NSGlobalDomain com.apple.trackpad.forceClick -bool true
  defaults write com.apple.AppleMultitouchTrackpad ForceSuppressed -bool false

  print_finished ${#ITEM}
}

do_fix_screenshots() {
  ITEM="Fixing screenshot behavior"
  print_starting $ITEM

  # Make a screenshots folder
  mkdir -p ~/Screen\ Shots
  defaults write com.apple.screencapture location ~/Screen\ Shots

  # To hell with preview thumbnails
  defaults write com.apple.screencapture show-thumbnail -bool FALSE

  # Use PNG format for screenshots
  defaults write com.apple.screencapture type -string "png"

  print_finished ${#ITEM}
}

do_finder_setup() {
  ITEM="Setting up the finder"
  print_starting $ITEM

  # Show all extensions
  defaults write NSGlobalDomain AppleShowAllExtensions -bool true
  # Default new windows to column view
  defaults write com.apple.Finder FXPreferredViewStyle clmv
  # Allow quitting finder with cmd+Q
  defaults write com.apple.finder QuitMenuItem -bool true
  # Finder: show hidden files by default
  defaults write com.apple.finder AppleShowAllFiles -bool true
  # Finder: show status bar
  defaults write com.apple.finder ShowStatusBar -bool true
  # Finder: show path bar
  defaults write com.apple.finder ShowPathbar -bool true
  # Disable the warning when changing a file extension
  defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false
  # Disable the warning before emptying the Trash
  defaults write com.apple.finder WarnOnEmptyTrash -bool false
  # Empty Trash securely by default
  defaults write com.apple.finder EmptyTrashSecurely -bool true
  # Set Desktop as the default location for new Finder windows
  defaults write com.apple.finder NewWindowTarget -string "PfDe"
  defaults write com.apple.finder NewWindowTargetPath -string "file://${HOME}/Desktop/"
  # Show icons for hard drives, servers, and removable media on the desktop
  defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true
  defaults write com.apple.finder ShowHardDrivesOnDesktop -bool true
  defaults write com.apple.finder ShowMountedServersOnDesktop -bool true
  defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true

  print_finished ${#ITEM}
}

do_screensaver_setup() {
  ITEM="Setting up the screensaver"
  print_starting $ITEM

  # Use Flurry screensaver
  defaults -currentHost write com.apple.screensaver moduleDict -dict path -string "/System/Library/Screen Savers/Flurry.saver" moduleName -string "Flurry" type -int 0
  # Never start it
  defaults -currentHost write com.apple.screensaver idleTime -int 0

  print_finished ${#ITEM}
}

do_sound_setup() {
  ITEM="Setting up sound preferences"
  print_starting $ITEM
  # Set alert sound to submarine
  defaults write .GlobalPreferences com.apple.sound.beep.sound /System/Library/Sounds/Submarine.aiff
  print_finished ${#ITEM}
}

do_set_spotlight_preferences() {
  ITEM="Setting up spotlight preferences"
  print_starting $ITEM

  # Set spotlight keyboard shortcut to control+space
  defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 64 "{ enabled = 1; value = { parameters = (32, 49, 262144); type = 'standard'; }; }"

  print_finished ${#ITEM}
}

do_kill_running_apps()  {
  ITEM="Restarting some things"
  print_starting $ITEM

  killall Dock
  killall "Notification Center"
  killall Finder
  killall SystemUIServer
  killall cfprefsd
  # TODO - how do I kill the trackpad and the keyboard?

  print_finished ${#ITEM}
}

do_setup() {
  printf "\n\e[33;1mSetting up macOS\e[0m\n"
  printf "\e[33;1m--------------------------------------------------------------------------------\e[0m\n"

# 
  # do_keep_sudo_alive 

  do_global_settings
  do_keyboard_setup
  do_trackpad_setup
  do_dock_setup
  do_fix_screenshots
  do_finder_setup
  do_screensaver_setup
  do_sound_setup
  do_set_spotlight_preferences

  do_kill_running_apps
  printf "\n\e[32;1m    macOS is setup.  I think you need to restart, though\e[0m\n"
}

# Wipe everything back to factory defaults
do_config_resets() {
  # TODO - what about everything else?

  # dock
  defaults delete com.apple.dock

  # Finder
  defaults write NSGlobalDomain AppleShowAllExtensions -bool false

}

do_setup

