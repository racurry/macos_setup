[user]
  email = aaroncurry@gmail.com
	name = Aaron Curry
	signingkey = ~/.ssh/id_personal_github.pub

[includeIf "gitdir:~/workspace/galileo/"]
  path = ~/.gitconfig_galileo

[alias]
  # Command shortcuts
  a = add
  aa = add -A
  ci = commit
  co = checkout
  cb = checkout -b
  st = status
  br = branch

  # What's your default branch?
  default-branch = "!git symbolic-ref refs/remotes/origin/HEAD | cut -f4 -d/"

  # What branch is this
  branch-name = !git rev-parse --abbrev-ref HEAD

  # Which branches have been merged
  merged-branches = !git branch --merged

  # I like rebases
  pur = pull --rebase

  # Add and commit everything
  aco = !git add -A && git commit -m

  # Stash pull and reapply
  restash = !git stash -u && git pull --rebase && git stash apply

  # Prettier, easier to follow logs.
  lol = log --graph --date=relative --pretty=tformat:'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%an %ad)%Creset'
  lds = log --pretty=format:\"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]\" --decorate --date=short

  # Pull the latest commit off, put leave the change staged
  uncommit = reset --soft HEAD~1

  # Don't accidentally clobber someone else's stuff
  pushf = push --force-with-lease

  # Take some of the sting out of messing up
  amend = commit --amend --no-edit
  oops = !git add . && git amend
  oopspush = !git oops && git pushf

  # Delete local branches that have been merged
  cleanup-merged = !git branch --merged | grep -v -e $(git default-branch) -e '\\*' | xargs -n 1 git branch -d 2>/dev/null || true
  cleanup-gone = !git branch --format='%(refname:short) %(upstream:track)' | grep '\\[gone\\]' | awk '{print $1}' | xargs -r git branch -D
  cleanup = !git cleanup-merged && git cleanup-gone && git remote prune origin

  # Push up changes
  publish = !git push -u origin $(git branch-name)
  pub = !git publish

  # go to default branch, pull, cleanup
  reup = !git checkout $(git default-branch) && git pull --rebase && git cleanup

  # Add, commit, rebase, then push
  gobig = !git add -A && git commit && git pull --rebase && git push

  # Rebase current branch onto latest default branch and force push with lease
  rebase-and-push = !git fetch origin && git rebase origin/$(git default-branch) && git push --force-with-lease

  # kill everything locally
  wipe = !git reset --hard && git clean -fd

  # Open a PR
  pr = !hub pull-request
	refresh = !git commit --amend -m \"$(git log -1 --format=%s)\"

[core]
  excludesfile = ~/.gitignore_global
  pager = "diff-so-fancy | less --tabs=4"
  editor = "code --wait"

[diff]
  # Show renames/moves as such
  renames = true

[status]
  # Recursively traverse untracked directories to display all contents
  showUntrackedFiles = all

[color]
	ui = true

[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22

[color "diff"]
	meta = 11
	frag = magenta bold
	commit = yellow bold
	old = red bold
	new = green bold
	whitespace = red reverse
[push]
	followTags = true
[hub]
	protocol = ssh
[pull]
	rebase = true
[submodule]
	recurse = true
[init]
	defaultBranch = main
[gpg]
	format = ssh
[commit]
	gpgsign = true
[gpg "ssh"]
	allowedSignersFile = ~/.ssh/allowed_signers
